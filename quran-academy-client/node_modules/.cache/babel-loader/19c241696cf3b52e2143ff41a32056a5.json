{"ast":null,"code":"export const fetchStudents = () => {\n  //  return (dispatch) => {\n  //  dispatch({ type: 'LOADING_STUDENTS' });\n  //  return fetch('/api/students')\n  // .then(response => response.json())\n  /// .then(students => dispatch({ type: 'FETCH_STUDENTS', payload: students }));\n  // };\n  return fetch('/api/students').then(response => response.json());\n};\nexport const fetchTeachers = () => {\n  //  return (dispatch) => {\n  //    dispatch({ type: 'LOADING_TEACHERS' });\n  //    return fetch('/api/teachers')\n  //   .then(response => response.json())\n  //   .then(teachers => dispatch({ type: 'FETCH_TEACHERS', payload: teachers }));\n  // };\n  return fetch('/api/teachers').then(response => response.json());\n};\nexport const updateStudent = data => {\n  let body = JSON.stringify({\n    student: data.student\n  });\n  debugger;\n  return fetch('/api/students/' + data.student.id, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res;\n  });\n};\nexport const addTeacher = data => {\n  const request = {\n    method: 'POST',\n    body: JSON.stringify({\n      teacher: data\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch('/api/teachers', request).then(response => response.json);\n};","map":{"version":3,"sources":["/Users/tahseensiddiqui/Development/code/quran-academy/quran-academy-client/src/actions/actions.js"],"names":["fetchStudents","fetch","then","response","json","fetchTeachers","updateStudent","data","body","JSON","stringify","student","id","method","headers","res","addTeacher","request","teacher"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAE,MAAI;AAC9B;AACE;AACA;AACA;AACA;AACF;AACA,SAAOC,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4BC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAAtC,CAAP;AACA,CARK;AAUN,OAAO,MAAMC,aAAa,GAAE,MAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAOJ,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4BC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAAtC,CAAP;AACD,CARK;AAUR,OAAO,MAAME,aAAa,GAAGC,IAAD,IAAU;AACpC,MAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACC,IAAAA,OAAO,EAAEJ,IAAI,CAACI;AAAf,GAAf,CAAX;AACA;AACA,SAAOV,KAAK,CAAC,mBAAmBM,IAAI,CAACI,OAAL,CAAaC,EAAjC,EAAqC;AAC3CC,IAAAA,MAAM,EAAE,KADmC;AAE3CL,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAFqC;AAG3CM,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHkC,GAArC,CAAL,CAMFZ,IANE,CAMGa,GAAG,IAAI;AACZ,WAAOA,GAAP;AACH,GARK,CAAP;AASA,CAZK;AAgBP,OAAO,MAAMC,UAAU,GAAGT,IAAD,IAAS;AAChC,QAAMU,OAAO,GAAG;AACdJ,IAAAA,MAAM,EAAE,MADM;AAEdL,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACQ,MAAAA,OAAO,EAAEX;AAAV,KAAf,CAFQ;AAGdO,IAAAA,OAAO,EAAC;AACN,sBAAgB;AADV;AAHM,GAAhB;AAOA,SAAOb,KAAK,CAAC,eAAD,EAAkBgB,OAAlB,CAAL,CAAgCf,IAAhC,CAAqCC,QAAQ,IAAIA,QAAQ,CAACC,IAA1D,CAAP;AACD,CATM","sourcesContent":["export const fetchStudents= ()=>{\n  //  return (dispatch) => {\n    //  dispatch({ type: 'LOADING_STUDENTS' });\n    //  return fetch('/api/students')\n    // .then(response => response.json())\n    /// .then(students => dispatch({ type: 'FETCH_STUDENTS', payload: students }));\n  // };\n  return fetch('/api/students').then(response=>response.json())\n }\n\n export const fetchTeachers= ()=>{\n    //  return (dispatch) => {\n    //    dispatch({ type: 'LOADING_TEACHERS' });\n    //    return fetch('/api/teachers')\n    //   .then(response => response.json())\n    //   .then(teachers => dispatch({ type: 'FETCH_TEACHERS', payload: teachers }));\n    // };\n    return fetch('/api/teachers').then(response=>response.json());\n  };\n\nexport const updateStudent =(data) => {\n  let body = JSON.stringify({student: data.student})\n  debugger;\n  return fetch('/api/students/' + data.student.id, {\n        method: 'PUT',\n        body: JSON.stringify(body),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then(res => {\n       return res;\n   })\n }\n\n\n\nexport const addTeacher= (data) =>{\n  const request = {\n    method: 'POST',\n    body: JSON.stringify({teacher: data}),\n    headers:{\n      'Content-Type': 'application/json',\n  }\n};\n  return fetch('/api/teachers', request).then(response => response.json);\n}\n"]},"metadata":{},"sourceType":"module"}